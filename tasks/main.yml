- debug:
    var: win_iis_install_base
    verbosity: 2

- block:
    - name: Install IIS related features
      win_feature:
        name: "{{ item.name }}"
        source: "{{ win_feature_source|default(omit) }}"
        state: present
        include_sub_features: "{{ item.include_sub_features|default(omit) }}"
        include_management_tools: "{{ item.include_management_tools|default(omit) }}"
      with_items: "{{ win_features }}"

    - include_tasks: install_msi_mods.yml
      with_items: "{{ win_iis_external_modules }}"
      when: win_iis_rewrite_enabled|default()
      loop_control:
        loop_var: task_item

    - debug:
        var: win_iis_msi_pkgs
        verbosity: 3

    - include_tasks: install_msi_mods.yml
      with_items: "{{ win_iis_msi_pkgs }}"
      loop_control:
        loop_var: task_item

    # Ansible bug? Happen with all version basically can not do string concat with
    # backslash

    - set_fact:
        ansible_install_dir_with_backslash: >
          {{ ansible_install_dir }}\

    - name: Download dependencies install files for chocolatey packages
      win_get_url:
        url: "{{ item.url }}"
        dest: "{{ item.savepath|default(ansible_install_dir_with_backslash|trim + item.url|basename) }}"
        force: no
      with_items: "{{ win_iis_chocolatey_pkgs }}"
      when: item.url|default()

    - name: Install chocolatey pkgs
      win_chocolatey:
        name: "{{ item.name }}"
        state: "{{ item.state|default('present') }}"
        version: "{{ item.version|default(omit) }}"
        timeout: "{{ item.timeout|default(omit) }}"
        source: "{{ item.source|default(omit) }}"
        proxy_url: "{{ item.proxy_url|default(omit) }}"
        proxy_username: "{{ item.proxy_username|default(omit) }}"
        proxy_password: "{{ item.proxy_password|default(omit) }}"
        params: "{{ item.params|default(omit) }}"
        install_args: "{{ item.install_args|default(omit) }}"
        ignore_dependencies: "{{ item.ignore_dependencies|default(omit) }}"
        ignore_checksums: "{{ item.ignore_checksums|default(omit) }}"
        force: "{{ item.force|default(omit) }}"
        allow_prerelease: "{{ item.allow_prerelease|default(omit) }}"
        allow_empty_checksums: "{{ item.allow_empty_checksums|default(omit) }}"
      with_items: "{{ win_iis_chocolatey_pkgs }}"
      when: not item.download_only|default(False)
  when: win_iis_install_base|default()

- name: Deploy ps script to set globalization settings for dotnet
  win_template:
    src: webroot-settings.ps1
    dest: '{{ ansible_install_dir }}\webroot-settings.ps1'

- name: Remove Default Web Site
  win_iis_website:
    name: "Default Web Site"
    state: absent
  when: win_iis_remove_default_website|default(True)

- name: Run the globalization settings for dotnet script
  win_command: 'powershell {{ ansible_install_dir }}\webroot-settings.ps1'

- name: Set fact win_iis_websites_path from win_iis_websites
  set_fact:
    win_iis_websites_path: "{{ win_iis_websites|map(attribute='physical_path')|list|unique }}"

- name: Set fact win_iis_webapplications_path from win_iis_webapplications
  set_fact:
    win_iis_webapplications_path: "{{ win_iis_webapplications|map(attribute='physical_path')|list|unique }}"

- name: Set fact win_iis_directories
  set_fact:
    win_iis_directories: "{{ (win_iis_websites_path + win_iis_webapplications_path)|unique }}"

- name: Make sure all physical path do exist
  win_file:
    path: '{{ item }}'
    state: directory
  with_items: "{{ win_iis_directories }}"

- name: Set fact win_iis_application_pools_from_sites list from win_iis_websites
  set_fact:
    win_iis_application_pools_from_sites: >
      {{ win_iis_application_pools_from_sites|default([]) + [{'name': item.application_pool}] }}
  with_items: "{{ win_iis_websites }}"
  when: item.application_pool not in win_iis_application_pools|json_query('[].name')
  no_log: no_log|default(True)

- name: Set fact win_iis_application_pool_lookup list from win_iis_websites
  set_fact:
    win_iis_application_pool_lookup: >
      {{ win_iis_application_pool_lookup|default({})|combine({item.name: item.application_pool}) }}
  with_items: "{{ win_iis_websites }}"
  no_log: no_log|default(True)

- name: Set fact win_iis_application_pools_all
  set_fact:
    win_iis_application_pools_all: "{{ (win_iis_application_pools + win_iis_application_pools_from_sites|default([]))|unique }}"
  no_log: no_log|default(True)

# We have issues with the identity created. For now trying my own powershell
# solution instead
#- name: Create/Remove Application Pool defined in win_iis_application_pools
#  win_iis_webapppool:
#    name: "{{ item.name }}"
#    state: "{{ item.state|default('present') }}"
#    attributes: "{{ item.attributes|default(omit) }}"
#  with_items: "{{ win_iis_application_pools_all }}"

- name: Template common-web.ps1 script
  win_copy:
    src: "common-web.ps1"
    dest: '{{ ansible_install_dir }}\common-web.ps1'

- name: Create/Remove Application Pool defined in win_iis_application_pools
  win_shell: |
    . {{ ansible_install_dir }}\common-web.ps1
    $processModel = @{}
    {% for mykey, myval in (item.attributes|default({})).items() %}
    ${{ mykey }} = {{ '$true' if myval == true else '"' + myval + '"' }}
    {% endfor %}
    apppool -name "{{ item.name }}" -state "{{ item.state|default('present') }}" -processModel $processModel -runtimeVersion "{{ ((item.attributes|default({})).runtimeVersion)|default('v4.0') }}" -pipelineMode "{{ item.pipelineMode|default('Integrated') }}" -startMode "{{ item.startMode|default('AlwaysRunning') }}"
  with_items: "{{ win_iis_application_pools_all }}"
  when: item.name | default()
  no_log: no_log|default(True)

# We only pick up the site name here from win_iis_webapplications to auto
# create site list if there is not a similar site defined in win_iis_websites. We
# do not want to define a full site attributes because there might be a case
# that different webapplication share the same site and we might fall into the
# same definition again.

# However if we need more site attributes rather than just the name, we can
# explicitly define these sites under variable win_iis_websites.

- name: Set fact win_iis_websites_from_webapplication
  set_fact:
    win_iis_websites_from_webapplications: >
      {{ win_iis_websites_from_webapplications|default([]) + [{'name': item['site'], 'physical_path': item['physical_path']}] }}
  with_items: "{{ win_iis_webapplications }}"
  when: item.site not in win_iis_websites|json_query('[].name')
  no_log: no_log|default(True)

- name: Set fact win_iis_websites_all
  set_fact:
    win_iis_websites_all: "{{ win_iis_websites + win_iis_websites_from_webapplications|default([])|unique }}"
  no_log: no_log|default(True)

- name: Create web sites defined in win_iis_websites
  win_shell: |
    . {{ ansible_install_dir }}\common-web.ps1
    website -name "{{ item.name }}" -state "{{ item.state|default('started') }}" {{ '-hostHeader "' + item.hostname + '"' if item.hostname|default() else '' }} -Path "{{ item.physical_path }}" {{ '-certHash "' + item.certificate_hash + '"' if item.certificate_hash|default() else '' }} {{ '-formsAuthentication $true' if item.forms_authentication|default() else '' }} {{ '-windowsAuthentication $true' if item.windows_authentication|default() else '' }} {{ '-anonymousAuthentication $true' if item.anonymous_authentication|default() else '' }} {{ '-Ssl $true' if item.ssl|default() else '' }} {{ '-Port ' + item.port|string if item.port|default() else '' }}
  with_items: "{{ win_iis_websites_all }}"
  when: item.name | default() and item.physical_path|default()
  no_log: no_log|default(True)

- name: Create host entries in hosts file for the domain
  win_lineinfile:
    path: 'c:\windows\system32\drivers\etc\hosts'
    line: '127.0.0.1 {{ item.hostname }}'
  with_items: "{{ win_iis_websites_all }}"
  when: item.hostname|default()

- name: Create Web Application defined in win_iis_webapplications
  win_iis_webapplication:
    name: "{{ item.name }}"
    application_pool: "{{ item.application_pool|default(win_iis_application_pool_lookup[item.site|default()]|default(omit)) }}"
    physical_path: "{{ item.physical_path|default(omit) }}"
    site: "{{ item.site }}"
    anonymous_authentication: "{{ item.anonymous_authentication|default(omit) }}"
    basic_authentication: "{{ item.basic_authentication|default(omit) }}"
    windows_authentication: "{{ item.windows_authentication|default(omit) }}"
    forms_authentication: "{{ item.forms_authentication|default(omit) }}"
    state: "{{ item.state|default(omit) }}"
  with_items: "{{ win_iis_webapplications }}"
  no_log: no_log|default(True)
