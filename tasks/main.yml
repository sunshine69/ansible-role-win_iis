- name: Install IIS related features
  win_feature:
    name: "{{ item.name }}"
    source: "{{ win_feature_source|default(omit) }}"
    state: present
    include_sub_features: "{{ item.include_sub_features|default(omit) }}"
    include_management_tools: "{{ item.include_management_tools|default(omit) }}"
  with_items: "{{ win_features }}"

- name: Install chocolatey pkgs
  win_chocolatey:
    name: "{{ item }}"
    state: present
  with_items: "{{ chocolatey_pkgs }}"

- name: Set fact win_iis_websites_path from win_iis_websites
  set_fact:
    win_iis_websites_path: "{{ win_iis_websites|map(attribute='physical_path')|list|unique }}"

- name: Set fact win_iis_webapplications_path from win_iis_webapplications
  set_fact:
    win_iis_webapplications_path: "{{ win_iis_webapplications|map(attribute='physical_path')|list|unique }}"

- name: Set fact win_iis_directories
  set_fact:
    win_iis_directories: "{{ (win_iis_websites_path + win_iis_webapplications_path)|unique }}"

- name: Make sure all physical path do exist
  win_file:
    path: '{{ item }}'
    state: directory
  with_items: "{{ win_iis_directories }}"

- name: Set fact win_iis_application_pools_from_sites list from win_iis_websites
  set_fact:
    win_iis_application_pools_from_sites: "{{ win_iis_websites|map(attribute='application_pool')|list|unique }}"

- name: Set fact win_iis_application_pools_all
  set_fact:
    win_iis_application_pools_all: "{{ (win_iis_application_pools + win_iis_application_pools_from_sites)|unique }}"

- name: Create Application Pool defined in win_iis_application_pools
  win_iis_webapppool:
    name: "{{ item }}"
    state: present
  with_items: "{{ win_iis_application_pools_all }}"

# Learn more about jme_path :D
# http://jmespath.org/tutorial.html#list-and-slice-projections
# This will return a list of dict with a key 'name' and value is the site name
# so we can create them later.

- name: Set fact win_iis_websites_from_webapplication
  set_fact:
    win_iis_websites_from_webapplications: >
      {{ win_iis_websites_from_webapplications|default([]) + [{'name': item['site']}] }}
  with_items: "{{ win_iis_webapplications }}"
  when: item.site not in win_iis_websites|json_query('[].name')

- name: Set fact win_iis_websites_all
  set_fact:
    win_iis_websites_all: "{{ win_iis_websites + win_iis_websites_from_webapplications|default([])|unique }}"

- name: Create web sites defined in win_iis_websites
  win_iis_website:
    application_pool: "{{ item.application_pool|default(omit) }}"
    hostname: "{{ item.hostname|default(omit) }}"
    port: "{{ item.port|default(omit) }}"
    name: "{{ item.name }}"
    parameters: "{{ item.parameters|default(omit) }}"
    physical_path: "{{ item.physical_path|default(omit) }}"
    site_id: "{{ item.site_id|default(omit) }}"
    ssl: "{{ item.ssl|default(omit) }}"
    state: "{{ item.state|default(omit) }}"
  with_items: "{{ win_iis_websites_all }}"

# This allows us to setup certificate and host_header, protocol if needed.

- name: Remove wrong protocol bindings created by win_iis_website module
  win_iis_webbinding:
    name: "{{ item.name }}"
    host_header: "{{ item.host_header|default(omit) }}"
    ip: "{{ item.ip|default(omit) }}"
    port: "{{ item.port|default(omit) }}"
    protocol: "http"
    state: "absent"
  with_items: "{{ win_iis_websites_all }}"
  when: item.ssl

- name: Configure web bindings for win_iis_websites
  win_iis_webbinding:
    name: "{{ item.name }}"
    certificate_hash: "{{ item.certificate_hash|default(omit) }}"
    certificate_store_name: "{{ item.certificate_store_name|default(omit) }}"
    host_header: "{{ item.host_header|default(omit) }}"
    ip: "{{ item.ip|default(omit) }}"
    port: "{{ item.port|default(omit) }}"
    protocol: "{{ item.protocol|default(omit) }}"
  with_items: "{{ win_iis_websites_all }}"

- name: Create Web Applciation defined in win_iis_webapplications
  win_iis_webapplication:
    name: "{{ item.name }}"
    application_pool: "{{ item.application_pool|default(omit) }}"
    physical_path: "{{ item.physical_path|default(omit) }}"
    site: "{{ item.site }}"
    state: "{{ item.state|default(omit) }}"
  with_items: "{{ win_iis_webapplications }}"
